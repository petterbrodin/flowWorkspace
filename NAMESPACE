useDynLib("flowWorkspace",.registration=TRUE)
#Generated by codetoolsBioC version 0.0.16
#Timestamp: Wed Apr 27 08:15:46 2011

#Imports: Biobase, Rgraphviz, XML, flowCore, graph, graphics, lattice,
#         methods, stats, utils

importClassesFrom(Biobase, AnnotatedDataFrame)

importClassesFrom(XML, XMLInternalDocument)

importClassesFrom(flowCore, ellipsoidGate, intersectFilter,
                  polygonGate, rectangleGate, workFlow)

importClassesFrom(graph, graphNEL)

importClassesFrom(methods, ANY, character, data.frame, environment,
                  list, logical, matrix, missing, numeric, oldClass)

importMethodsFrom(Biobase, description, exprs, pData, "pData<-",
                  sampleNames)
importFrom(hexbin,hexbin,hexbinplot)
#importMethodsFrom(Rgraphviz, plot)
importFrom(Cairo,CairoPNG)
importMethodsFrom(XML, addAttributes, free, saveXML)

importMethodsFrom(flowCore, '%in%', Data, Rm, add, assign, colnames,
                  "colnames<-", compensate, eval, filter, get,
                  identifier, keyword, mget, ncol, nrow, parameters,
                  "parameters<-", parent, print, spillover, split,
                  summary, tree, views)

importMethodsFrom(graph, addEdge, adj, edgeData, nodeData,
                  "nodeData<-", "nodeDataDefaults<-", nodes, subGraph,
                  ugraph)

importMethodsFrom(methods, coerce, show)

#importClassesFrom(ncdfFlow,ncdfFlowSet)
#importMethodsFrom(ncdfFlow,"[[")
#importMethodsFrom(ncdfFlow,"addFrame")
#importFrom(ncdfFlow,read.ncdfFlowSet)

importFrom(XML, newXMLNode, xmlAttrs, xmlChildren, xmlGetAttr, xmlName,
           xmlParent, xmlRoot, xmlTreeParse, xmlValue, xpathApply)

importFrom(flowCore, compensation, flowFrame, flowSet, polygonGate,
           read.FCS, read.FCSheader, read.flowSet, rectangleGate,
           transformList, workFlow)

importFrom(tools, md5sum)
importFrom(graph, "nodeRenderInfo<-")

importFrom(graphics, axis, points, polygon, text)

importFrom(lattice, barchart)

importFrom(methods, "@<-", is, new)

importFrom(stats, na.omit, optimize, qchisq, sd, splinefun)

importFrom(utils, menu)

exportClasses(flowJoWorkspace,GatingHierarchy,GatingSet);

exportMethods("openWorkspace","show","closeWorkspace","summary","parseWorkspace","[","[[","length","lapply","getNodes","execute","plot","plotGate","getPopStats","plotPopCV","getData","getGate","getParent","getBoundaries","getDimensions","getIndices","getChildren","getProp","getTotal","getSamples","getSample","getSampleGroups","[<-","[[<-","getCompensationMatrices","getTransformations","getKeywords","keyword","flowWorkspace2flowCore","exportAsFlowJoXML","ellipsoidGate2FlowJoVertices","getNcdf","getIndiceFile","haveSameGatingHierarchy","setData","copyGatingHierarchyFromTo"
				,"ncFlowSet","ncFlowSet<-")

export("plotWf","getFJWSubsetIndices","saveNcdf","recomputeGatingSet","ExportTSVAnalysis","includedGate2ExcludedGate","includedChannel2ExcludedChannel");
